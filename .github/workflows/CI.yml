name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'  # LTS version
          - '1'     # Latest stable
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      
      - name: Cache Julia artifacts
        uses: actions/cache@v4
        with:
          path: ~/.julia
          key: ${{ runner.os }}-julia-${{ matrix.version }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.version }}-
      
      - name: Remove Manifest (let each Julia version resolve)
        run: rm -f Manifest.toml
      
      - name: Install dependencies
        run: |
          julia --project=. -e '
            using Pkg
            Pkg.instantiate()
          '
      
      - name: Run unit tests
        run: julia --project=. test/runtests.jl

