# Example GitHub Actions Workflow for JWAS.jl
# Save this as .github/workflows/CI.yml to enable automated testing

name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8'  # LTS version
          - '1'    # Latest stable
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      
      - name: Cache Julia artifacts
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-julia-${{ matrix.version }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.version }}-
      
      - name: Install dependencies
        run: |
          julia --project=. -e '
            using Pkg
            Pkg.instantiate()
          '
      
      - name: Run unit tests
        run: julia --project=. test/test_unit_examples.jl
      
      - name: Run integration tests (only on master)
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        env:
          RUN_INTEGRATION_TESTS: "true"
        run: julia --project=. test/runtests_example.jl
      
      - name: Process coverage (optional)
        uses: julia-actions/julia-processcoverage@v1
        if: matrix.os == 'ubuntu-latest' && matrix.version == '1'
      
      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest' && matrix.version == '1'
        with:
          files: lcov.info

  # Optional: Test on nightly Julia to catch upcoming issues early
  test-nightly:
    name: Julia nightly
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail if nightly has issues
    
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: nightly
      - run: |
          julia --project=. -e 'using Pkg; Pkg.instantiate()'
      - run: julia --project=. test/test_unit_examples.jl

  # Optional: Documentation build test
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()
          '
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

# ============================================================================
# Customization Notes:
# ============================================================================
# 
# 1. Adjust Julia versions in matrix.version to match your support policy
# 2. Choose which OS to test on (remove unwanted from matrix.os)
# 3. Modify branch names if you use different naming (e.g., develop)
# 4. Add/remove the docs job if you have/don't have documentation
# 5. Add secrets for DOCUMENTER_KEY if deploying docs
#
# ============================================================================
# Performance Tips:
# ============================================================================
#
# - Cache Julia artifacts to speed up CI (~2-5x faster)
# - Use fail-fast: false to see all test failures at once
# - Run slow tests only on specific branches
# - Use continue-on-error for nightly to avoid false negatives
#
# ============================================================================
# Badge for README.md:
# ============================================================================
#
# Add this to your README.md to show test status:
# [![CI](https://github.com/USERNAME/JWAS.jl/actions/workflows/CI.yml/badge.svg)](https://github.com/USERNAME/JWAS.jl/actions/workflows/CI.yml)
#


